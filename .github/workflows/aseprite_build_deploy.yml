name: Build and Release Aseprite

on:
  push:
    branches: [master]

env:
  BUILD_TYPE: Release

jobs:
  check-version:
    name: 🔍 Check Aseprite Latest Version
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.should_build.outputs.should_build }}
      latest_tag: ${{ steps.get_info.outputs.latest_tag }}
      download_url: ${{ steps.get_info.outputs.download_url }}
      version_body: ${{ steps.get_info.outputs.version_body }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get latest release info
        id: get_info
        run: |
          response=$(curl -s https://api.github.com/repos/aseprite/aseprite/releases/latest)
          echo "latest_tag=$(echo "$response" | jq -r '.tag_name')" >> $GITHUB_OUTPUT
          echo "download_url=$(echo "$response" | jq -r '.assets[0].browser_download_url')" >> $GITHUB_OUTPUT
          echo "version_body<<EOF" >> $GITHUB_OUTPUT
          echo "$(echo "$response" | jq -r '.body')" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check for existing version
        id: should_build
        run: |
          if git tag | grep -q "${{ steps.get_info.outputs.latest_tag }}"; then
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release draft
        id: create_release
        if: steps.should_build.outputs.should_build == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_info.outputs.latest_tag }}
          name: Aseprite ${{ steps.get_info.outputs.latest_tag }}
          body: ${{ steps.get_info.outputs.version_body }}
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: 🏗️ Build Aseprite
    needs: check-version
    if: needs.check-version.outputs.should_build == 'true'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: 📦 Install Dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y cmake ninja-build libxcursor-dev libxi-dev libgl1-mesa-dev unzip curl jq

      - name: 📦 Install Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install cmake ninja p7zip jq

      - name: 📦 Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: 📁 Restore Skia Cache
        uses: actions/cache@v4
        id: skia-cache
        with:
          path: skia
          key: skia-${{ matrix.os }}

      - name: 📥 Download Skia (if cache miss)
        if: steps.skia-cache.outputs.cache-hit != 'true'
        run: |
          curl -L -o skia.zip https://github.com/aseprite/skia/releases/download/m81-b607b32047/Skia-${{ runner.os }}-Release-x64.zip
          unzip skia.zip -d skia

      - name: 📥 Download Aseprite Source
        run: |
          curl -L -o source.zip "${{ needs.check-version.outputs.download_url }}"
          unzip source.zip -d aseprite
          mkdir -p aseprite/build

      - name: ⚙️ Run CMake
        working-directory: aseprite/build
        run: |
          cmake .. \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=${{ github.workspace }}/skia \
            -DSKIA_LIBRARY_DIR=${{ github.workspace }}/skia/out/Release-x64 \
            -G Ninja

      - name: 🛠️ Build with Ninja
        working-directory: aseprite/build
        run: ninja aseprite

      - name: 🧹 Post-build Cleanup
        working-directory: aseprite/build/bin
        run: |
          rm -f gen* modp_b64_gen* || true
          echo "# Portable mode" > aseprite.ini

      - name: 📦 Package Build Artifacts
        working-directory: aseprite/build/bin
        run: |
          7z a Aseprite-${{ needs.check-version.outputs.latest_tag }}-${{ runner.os }}.zip *

      - name: 🚀 Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: aseprite/build/bin/Aseprite-${{ needs.check-version.outputs.latest_tag }}-${{ runner.os }}.zip
          tag_name: ${{ needs.check-version.outputs.latest_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
